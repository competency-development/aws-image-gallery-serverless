AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Course Serverless App

Parameters:
  EnvironmentType:
    Description: An environment name that is prefixed to resource names
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev
  S3BucketName:
    Description: S3 bucket name
    Type: String
    AllowedValues:
      - kotsial-images-central
    Default: kotsial-images-central
  DynamoDBTableName:
    Description: DynamoDB table name
    Type: String
    AllowedValues:
      - images
    Default: images

Globals:
  Function:
    Tracing: Active
    Timeout: 5
    MemorySize: 512
    Runtime: java17
    Environment:
      Variables:
        ENV_TYPE: !Ref EnvironmentType
    Tags:
        EnvironmentType: !Ref EnvironmentType

  Api:
    TracingEnabled: true
    MethodSettings:
      - LoggingLevel: INFO
        ResourcePath: '/*'
        HttpMethod: '*'
    
Resources:

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: !Ref DynamoDBTableName
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      AttributeDefinitions:
        - AttributeName: key
          AttributeType: S
        - AttributeName: url
          AttributeType: S
        - AttributeName: description
          AttributeType: S
      KeySchema:
        - AttributeName: key
          KeyType: HASH

  #FUNCTIONS

  GetImagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${EnvironmentType}-getImages"
      CodeUri: getImagesFunction
      Handler: com.competencydevelopment.serverless.lambda.getimagesfunction.Handler::handleRequest
      Events:
        ImagesEvent:
          Type: HttpApi
          Properties:
            Method: GET
            Path: '/images'
      Environment:
        Variables:
          IMAGES_TABLE_NAME: !Ref DynamoDBTableName
      Policies: 
        - Version: '2012-10-17'
          Statement:
              - Effect: Allow
                Action:
                  - dynamodb:BatchGet*
                  - dynamodb:DescribeTable
                  - dynamodb:Get*
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*'

  SaveImagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${EnvironmentType}-saveImages"
      CodeUri: saveImagesFunction
      Handler: com.competencydevelopment.serverless.lambda.saveimagesfunction.Handler::handleRequest
      Events:
        ImagesEvent:
          Type: HttpApi
          Properties:
            Method: POST
            Path: '/images/upload'
      Environment:
        Variables:
          IMAGES_TABLE_NAME: !Ref DynamoDBTableName
          S3_BUCKET_NAME: !Ref S3BucketName
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:*
                - dynamodb:*
              Resource: "*"

# Outputs:
#   RestApiUrl:
#     Description: URL of your API endpoint
#     Value:
#       Fn::Sub: 'https://${HttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${EnvironmentType}/'
